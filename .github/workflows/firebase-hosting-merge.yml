# # This file was auto-generated by the Firebase CLI
# # https://github.com/firebase/firebase-tools

# name: Deploy to Firebase Hosting on merge
# "on":
#   push:
#     branches:
#       - main
#   workflow_dispatch:

# env:
#   flutter_version: "2.5.1"

# defaults:
#   run:
#     working-directory: app

# jobs:
#   build_and_deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - name: Cache flutter
#         uses: actions/cache@v2
#         with:
#           path: /opt/hostedtoolcache/flutter
#           key: ${{ runner.OS }}-flutter-install-cache-${{ env.flutter_version }}
#       - name: Cache firebase emulators
#         uses: actions/cache@v2
#         with:
#           path: ~/.cache/firebase/emulators
#           key: ${{ runner.os }}-firebase-emulators-${{ hashFiles('~/.cache/firebase/emulators/**') }}
#       - uses: subosito/flutter-action@v1
#         with:
#           flutter-version: ${{ env.flutter_version }}
#       - run: flutter pub get
#       - run: flutter test
#       - name: Test Firebase rules
#         working-directory: rules
#         run: |
#           npm install
#           npm install -g firebase-tools
#           firebase emulators:exec --only "firestore,storage" --project fiobabig-dashboard 'yarn test'
#       - run: flutter build web
#       - uses: FirebaseExtended/action-hosting-deploy@v0
#         with:
#           repoToken: "${{ secrets.GITHUB_TOKEN }}"
#           firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_FIOBABIG_DASHBOARD }}"
#           channelId: live
#           projectId: fiobabig-dashboard
#         env:
#           FIREBASE_CLI_PREVIEWS: hostingchannels
#       - name: Installing functions folder
#         working-directory: functions
#         run: yarn
#       - uses: w9jds/firebase-action@master
#         with:
#           args: deploy --only functions,firestore:rules,storage
#         env:
#           FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

name: Build and Publish

on:
  push:
    branches:
      - main
    workflow_dispatch:

env:
  flutter_version: "2.5.1"

defaults:
  run:
    working-directory: app

jobs:
  firebase-rules:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache firebase emulators
        uses: actions/cache@v2
        with:
          path: ~/.cache/firebase/emulators
          key: ${{ runner.os }}-firebase-emulators-${{ hashFiles('~/.cache/firebase/emulators/**') }}

      - name: Cache npm
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Test Firebase rules
        working-directory: rules
        run: |
          npm i
          npm install -g firebase-tools
          firebase emulators:exec --only "firestore,storage" --project fiobabig-dashboard 'yarn test'

  firebase-functions:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache npm
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Build functions
        working-directory: functions
        run: |
          npm i
          npm run build

  flutter:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache flutter
        uses: actions/cache@v2
        with:
          path: /opt/hostedtoolcache/flutter
          key: ${{ runner.OS }}-flutter-install-cache-${{ env.flutter_version }}

      - name: Get flutter
        uses: subosito/flutter-action@v1
        with:
          flutter-version: ${{ env.flutter_version }}

      - run: flutter pub get

      - run: flutter test

      - run: flutter build web

      - name: Archive Production Artifact
        uses: actions/upload-artifact@master
        with:
          name: web-build
          path: build/web

  deploy:
    runs-on: ubuntu-latest

    needs: [firebase-rules, firebase-functions, flutter]

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          name: web-build
          path: web-build

      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_FIOBABIG_DASHBOARD }}"
          channelId: live
          projectId: fiobabig-dashboard
        env:
          FIREBASE_CLI_PREVIEWS: hostingchannels

      - name: Installing functions folder
        working-directory: functions
        run: yarn

      - uses: w9jds/firebase-action@master
        with:
          args: deploy --only functions,firestore:rules,storage
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
