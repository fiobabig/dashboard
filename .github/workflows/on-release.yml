name: Deploy to Prod

on:
  release:
    types: [published]
    workflow_dispatch:

env:
  FLUTTER_VERSION: "2.5.1"
  FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
  FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
  FIREBASE_PROJECT_ID: fiobabig-dashboard

defaults:
  run:
    working-directory: app

jobs:
  firebase-rules:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ env.GITHUB_REF }}

      - name: Cache firebase emulators
        uses: actions/cache@v2
        with:
          path: ~/.cache/firebase/emulators
          key: ${{ runner.os }}-firebase-emulators-${{ hashFiles('~/.cache/firebase/emulators/**') }}

      - name: Cache npm
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Test Firebase rules
        working-directory: rules
        run: |
          npm i
          npm install -g firebase-tools
          firebase emulators:exec --only "firestore,storage" --project ${{ env.FIREBASE_PROJECT_ID }} 'yarn test'

  firebase-functions:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ env.GITHUB_REF }}

      - name: Cache npm
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Build functions
        working-directory: functions
        run: |
          npm i
          npm run build

  flutter:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ env.GITHUB_REF }}

      - name: Cache flutter
        uses: actions/cache@v2
        with:
          path: /opt/hostedtoolcache/flutter
          key: ${{ runner.OS }}-flutter-install-cache-${{ env.FLUTTER_VERSION }}

      - name: Get flutter
        uses: subosito/flutter-action@v1
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - run: flutter pub get

      - run: flutter test

      - run: flutter build web

      - run: cp build/web/index.publish.html build/web/index.html

      - name: Archive Production Artifact
        uses: actions/upload-artifact@master
        with:
          name: web-build
          path: app/build/web

  deploy:
    runs-on: ubuntu-latest

    needs: [firebase-rules, firebase-functions, flutter]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ env.GITHUB_REF }}

      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          name: web-build
          path: app/build/web

      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ env.FIREBASE_SERVICE_ACCOUNT }}"
          channelId: live
          projectId: ${{ env.FIREBASE_PROJECT_ID }}
        env:
          FIREBASE_CLI_PREVIEWS: hostingchannels

      - name: Installing functions folder
        working-directory: functions
        run: yarn

      - uses: w9jds/firebase-action@master
        with:
          args: deploy --only functions,firestore:rules,storage
        env:
          FIREBASE_TOKEN: ${{ env.FIREBASE_TOKEN }}
          PROJECT_ID: ${{ env.FIREBASE_PROJECT_ID }}
